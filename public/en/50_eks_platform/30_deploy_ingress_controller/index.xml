<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Module 02: AWS LoadBalancer Controller on Modern Infrastructure as Code with Pulumi</title>
    <link>//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller.html</link>
    <description>Recent content in Module 02: AWS LoadBalancer Controller on Modern Infrastructure as Code with Pulumi</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <atom:link href="//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2.1 Creating a New Project</title>
      <link>//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller/1_new_project.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller/1_new_project.html</guid>
      <description>Infrastructure in Pulumi is organized into projects. Each project is a single program that, when run, declares the desired infrastructure for Pulumi to manage.&#xA;Step 1 — Create a Directory Each Pulumi project lives in its own directory. Create one now and change into it:&#xA;mkdir aws-load-balancer-controller cd aws-load-balancer-controller Pulumi will use the directory name as your project name by default. To create an independent project, simply name the directory differently.</description>
    </item>
    <item>
      <title>2.2 Create an IAM Role</title>
      <link>//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller/10_create_iam_role.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller/10_create_iam_role.html</guid>
      <description>We&amp;rsquo;ll be deploying the AWS Load Balancer Controller into our EKS Cluster, but it will need to make API calls to AWS for some operations.&#xA;We can pass an IAM role to our Kubernetes deployment using IAM Roles for Service Accounts which we configured on our cluster&#xA;Let&amp;rsquo;s define the IAM role we need to pass to our Kubernetes resources&#xA;Step 1 — Retrieve Stack References Before we define any resources, we need to retrieve some outputs from our cluster stack.</description>
    </item>
    <item>
      <title>2.3 Deploy Ingress Controller</title>
      <link>//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller/20_deploy_ingress_ctrl.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/50_eks_platform/30_deploy_ingress_controller/20_deploy_ingress_ctrl.html</guid>
      <description>We have an IAM role defined, we can deploy the AWS Load Balancer controller using the Helm Chart&#xA;Step 1 — Create a Provider Before we create resources in our Kubernetes cluster, we need to provide a valid Kubernetes endpoint for Pulumi to talk to.&#xA;Usually, we would use KUBECONFIG file for interacting with Kubernetes, but we can also explicitly set a provider on each Kubernetes resource.&#xA;Let&amp;rsquo;s do this now.</description>
    </item>
  </channel>
</rss>
