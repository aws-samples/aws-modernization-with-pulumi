<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Module 01: EKS Cluster on Modern Infrastructure as Code with Pulumi</title>
    <link>//localhost:1313/en/50_eks_platform/20_provision_cluster.html</link>
    <description>Recent content in Module 01: EKS Cluster on Modern Infrastructure as Code with Pulumi</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <atom:link href="//localhost:1313/en/50_eks_platform/20_provision_cluster/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 Creating a New Project</title>
      <link>//localhost:1313/en/50_eks_platform/20_provision_cluster/1_new_project.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/50_eks_platform/20_provision_cluster/1_new_project.html</guid>
      <description>Infrastructure in Pulumi is organized into projects. Each project is a single program that, when run, declares the desired infrastructure for Pulumi to manage.&#xA;Step 1 — Create a Directory Each Pulumi project lives in its own directory. Create one now and change into it:&#xA;mkdir workshop-cluster cd workshop-cluster Pulumi will use the directory name as your project name by default. To create an independent project, simply name the directory differently.</description>
    </item>
    <item>
      <title>1.2 Configuring AWS</title>
      <link>//localhost:1313/en/50_eks_platform/20_provision_cluster/10_configuring_aws.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/50_eks_platform/20_provision_cluster/10_configuring_aws.html</guid>
      <description>Now that you have a basic project, let&amp;rsquo;s configure AWS support for it.&#xA;Step 1 — Install the AWS Package Run the following command to install the AWS and AWS Crosswalk package:&#xA;npm install @pulumi/aws npm install @pulumi/awsx The package will be added to node_modules, package.json, and package-lock.json.&#xA;Step 2 — Import the AWS Package Now that the AWS package is installed, we need to import it as part of our project:</description>
    </item>
    <item>
      <title>1.3 Create an EKS Cluster</title>
      <link>//localhost:1313/en/50_eks_platform/20_provision_cluster/20_create_cluster.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/50_eks_platform/20_provision_cluster/20_create_cluster.html</guid>
      <description>Now that you have a project configured to use AWS, you&amp;rsquo;ll need an AWS VPC configured for EKS. Let&amp;rsquo;s create that using Pulumi Crosswalk for AWS.&#xA;Step 1 — Define the VPC Define your VPC. We&amp;rsquo;re going to create a VPC with public and private subnets like so:&#xA;const name = &amp;#39;lbriggs-workshop&amp;#39; // replace this with your name! const clusName = `${name}-cluster` const clusterTag = `kubernetes.io/cluster/${clusName}` // this defines a valid VPC that can be used for EKS const vpc = new awsx.</description>
    </item>
  </channel>
</rss>
